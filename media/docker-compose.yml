version: '3.7'

services:
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
    networks:
      - web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - ../../cloud-data/sabnzbd/config:/config
      - /mnt/media2/Arr:/data
    ports: []
    labels:
      - traefik.enable=true
      - traefik.http.services.sabnzbd.loadbalancer.server.port=8080

      # HTTPS
      - traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.${CLOUD_DOMAIN}`)
      - traefik.http.routers.sabnzbd.tls.certresolver=mytlschallenge
      - traefik.http.routers.sabnzbd.entrypoints=web-secured
      - traefik.http.routers.sabnzbd.tls=true
      - traefik.http.routers.sabnzbd.service=sabnzbd

      # Automatically updated
      - com.centurylinklabs.watchtower.enable=true

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    networks:
      - web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - ../../cloud-data/sonarr/config:/config
      - /mnt/media2/Arr:/data
    ports: []
    labels:
      - traefik.enable=true
      - traefik.http.services.sonarr.loadbalancer.server.port=8989

      # HTTPS
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${CLOUD_DOMAIN}`)
      - traefik.http.routers.sonarr.tls.certresolver=mytlschallenge
      - traefik.http.routers.sonarr.entrypoints=web-secured
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.routers.sonarr.service=sonarr

      # Automatically updated
      - com.centurylinklabs.watchtower.enable=true

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    networks:
      - web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - ../../cloud-data/radarr/config:/config
      - /mnt/media2/Arr:/data
    ports: []
    labels:
      - traefik.enable=true
      - traefik.http.services.radarr.loadbalancer.server.port=7878

      # HTTPS
      - traefik.http.routers.radarr.rule=Host(`radarr.${CLOUD_DOMAIN}`)
      - traefik.http.routers.radarr.tls.certresolver=mytlschallenge
      - traefik.http.routers.radarr.entrypoints=web-secured
      - traefik.http.routers.radarr.tls=true
      - traefik.http.routers.radarr.service=radarr

      # Automatically updated
      - com.centurylinklabs.watchtower.enable=true

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    networks:
      - web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - ../../cloud-data/lidarr/config:/config
      - /mnt/media2/Arr:/data
    ports: []
    labels:
      - traefik.enable=true
      - traefik.http.services.lidarr.loadbalancer.server.port=8686

      # HTTPS
      - traefik.http.routers.lidarr.rule=Host(`lidarr.${CLOUD_DOMAIN}`)
      - traefik.http.routers.lidarr.tls.certresolver=mytlschallenge
      - traefik.http.routers.lidarr.entrypoints=web-secured
      - traefik.http.routers.lidarr.tls=true
      - traefik.http.routers.lidarr.service=lidarr

      # Automatically updated
      - com.centurylinklabs.watchtower.enable=true

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    networks:
      - web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - ../../cloud-data/prowlarr/config:/config
    ports: []
    labels:
      - traefik.enable=true
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696

      # HTTPS
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.${CLOUD_DOMAIN}`)
      - traefik.http.routers.prowlarr.tls.certresolver=mytlschallenge
      - traefik.http.routers.prowlarr.entrypoints=web-secured
      - traefik.http.routers.prowlarr.tls=true
      - traefik.http.routers.prowlarr.service=prowlarr

      # Automatically updated
      - com.centurylinklabs.watchtower.enable=true

networks:
  web:
    external: true
