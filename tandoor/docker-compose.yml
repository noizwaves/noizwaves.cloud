services:
  postgres:
    container_name: tandoor_postgres
    restart: unless-stopped
    image: postgres:16-alpine
    user: "1000:1000"
    volumes:
      - ../../cloud-data/tandoor/postgres:/var/lib/postgresql/data
    env_file:
      - ./.env
    networks:
      - backend

  app:
    # built-in Nginx config requires a specific hostname to function
    # https://github.com/TandoorRecipes/recipes/blob/c25a1df480c3c0a1f5a282b4968c1efad07e69a6/nginx/conf.d/Recipes.conf#L22
    hostname: web_recipes
    container_name: tandoor_app
    image: vabene1111/recipes:2.3.0
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ../../cloud-data/tandoor/staticfiles:/opt/recipes/staticfiles
      - ../../cloud-data/tandoor/mediafiles:/opt/recipes/mediafiles
    depends_on:
      - postgres
    networks:
      - backend
      - web
    labels:
      - traefik.enable=true

      ## Service settings
      - traefik.http.services.tandoor.loadbalancer.server.port=80
      - traefik.http.services.tandoor.loadbalancer.passhostheader=true

      ## HTTPS
      - traefik.http.routers.tandoor.rule=Host(`tandoor.${CLOUD_DOMAIN}`)
      - traefik.http.routers.tandoor.entrypoints=web-secured
      - traefik.http.routers.tandoor.service=tandoor
      - traefik.http.routers.tandoor.tls=true
      - traefik.http.routers.tandoor.tls.certresolver=mytlschallenge

      # Automatically updated
      - com.centurylinklabs.watchtower.enable=true

networks:
  backend:
    external: false
    internal: true

  web:
    external: true

