version: "3"
services:
  postgres:
    container_name: tandoor_postgres
    restart: unless-stopped
    image: postgres:16-alpine
    user: "1000:1000"
    volumes:
      - ../../cloud-data/tandoor/postgres:/var/lib/postgresql/data
    env_file:
      - ./.env
    networks:
      - backend

  # has to be called `web_recipes`: https://github.com/vabene1111/recipes/blob/develop/nginx/conf.d/Recipes.conf#L14
  web_recipes:
    container_name: tandoor_web
    image: vabene1111/recipes:1.5.29
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ../../cloud-data/tandoor/staticfiles:/opt/recipes/staticfiles
      - ../../cloud-data/tandoor/mediafiles:/opt/recipes/mediafiles
      - nginx_config:/opt/recipes/nginx/conf.d
    labels:
      # Automatically updated
      - com.centurylinklabs.watchtower.enable=true
    depends_on:
      - postgres
    networks:
      - backend

  nginx:
    container_name: tandoor_nginx
    image: nginx:mainline-alpine
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - nginx_config:/etc/nginx/conf.d:ro
      - ../../cloud-data/tandoor/staticfiles:/static
      - ../../cloud-data/tandoor/mediafiles:/media
    depends_on:
      - web_recipes
    networks:
      - backend
      - web
    labels:
      - traefik.enable=true

      ## Service settings
      - traefik.http.services.tandoor.loadbalancer.server.port=80
      - traefik.http.services.tandoor.loadbalancer.passhostheader=true

      ## HTTPS
      - traefik.http.routers.tandoor.rule=Host(`tandoor.${CLOUD_DOMAIN}`)
      - traefik.http.routers.tandoor.entrypoints=web-secured
      - traefik.http.routers.tandoor.service=tandoor
      - traefik.http.routers.tandoor.tls=true
      - traefik.http.routers.tandoor.tls.certresolver=mytlschallenge

      # Automatically updated
      - com.centurylinklabs.watchtower.enable=true

networks:
  backend:
    external: false
    internal: true

  web:
    external: true

volumes:
  nginx_config:
