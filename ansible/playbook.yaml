- name: SSH server
  hosts: all
  become: true
  tasks:
    - name: Install SSH server
      ansible.builtin.apt:
        name: openssh-server
    - name: Start SSH server
      ansible.builtin.service:
        name: ssh
        state: started
    - name: Configure SSH server
      ansible.builtin.include_role:
        name: willshersystems.sshd
      vars:
        sshd_install_service: false
        sshd:
          PasswordAuthentication: "no"
          PermitEmptyPasswords: "no"
          PermitRootLogin: "no"
          AllowUsers: cloud
    - name: SSH config directory exists
      ansible.builtin.file:
        path: /home/cloud/.ssh
        state: directory
        mode: "755"
    - name: Install public keys for cloud user
      ansible.builtin.copy:
        dest: /home/cloud/.ssh/authorized_keys
        src: files/authorized_keys
        group: cloud
        owner: cloud
        mode: "600"

- name: Time
  hosts: all
  become: true
  tasks:
    - name: Install NTP
      ansible.builtin.apt:
        name: ntp
    - name: Start NTP
      ansible.builtin.service:
        name: ntp
        state: started
    - name: Set timezone
      community.general.timezone:
        name: "{{ timezone }}"

- name: USB Drives
  hosts: all
  become: true
  tasks:
    - name: Install pmount
      ansible.builtin.apt:
        name: pmount

- name: DNS
  hosts: all
  become: true
  tasks:
    - name: Disable opinionated systemd-resolved
      ansible.builtin.service:
        name: systemd-resolved
        state: stopped
        enabled: false
    - name: Configure upstream DNS servers
      ansible.builtin.copy:
        dest: /etc/resolv.conf
        content: |-
          nameserver 1.1.1.1
          nameserver 1.0.0.1
        group: root
        owner: root
        mode: "644"

- name: Docker
  hosts: all
  become: true
  tasks:
    - name: Install Docker
      ansible.builtin.apt:
        name: docker.io
    - name: Install Docker Compose
      ansible.builtin.apt:
        name: docker-compose
    - name: Configure Docker daemon
      ansible.builtin.copy:
        dest: /etc/docker/daemon.json
        src: files/docker_daemon.json
        group: root
        owner: root
        mode: "644"
    - name: Start Docker service
      ansible.builtin.service:
        name: docker
        state: started
    - name: Add cloud to docker group
      ansible.builtin.user:
        name: cloud
        append: true
        groups: docker
    - name: Create web network
      community.docker.docker_network:
        name: web
        internal: false
        attachable: false
        driver: bridge
        scope: local
    - name: Docker config directory exists
      ansible.builtin.file:
        path: /home/cloud/.docker
        state: directory
        mode: "755"
    - name: Configure Docker for cloud
      ansible.builtin.copy:
        dest: /home/cloud/.docker/config.json
        src: files/docker_config.json
        group: cloud
        owner: cloud
        mode: "644"
